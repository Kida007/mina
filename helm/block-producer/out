NAME: test
LAST DEPLOYED: Wed Dec  2 23:05:02 2020
NAMESPACE: test
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-1
spec:
  selector:
    app: test-1
  ports:
  - protocol: TCP
    port: 8301
    targetPort: 8301
    name: gossip
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-2
spec:
  selector:
    app: test-2
  ports:
  - protocol: TCP
    port: 8301
    targetPort: 8301
    name: gossip
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-3
spec:
  selector:
    app: test-3
  ports:
  - protocol: TCP
    port: 8301
    targetPort: 8301
    name: gossip
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-4
spec:
  selector:
    app: test-4
  ports:
  - protocol: TCP
    port: 8301
    targetPort: 8301
    name: gossip
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-1
  labels:
    app: test-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-1
  template:
    metadata:
      labels:
        app: test-1
        testnet: coda-testnet
        role: block-producer
        class: undefined
        version: 0.0.16
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "codaprotocol/coda-daemon:0.0.16-beta7-develop"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || coda accounts import -config-directory /root/.coda-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        env: 
          - name: CODA_PRIVKEY_PASS
            value: "naughty blue worm"
      containers:
      
      
      - name: coda
        resources:
          limits:
          requests:
            memory: 8.0Gi
            cpu: 8.0
        image: codaprotocol/coda-daemon:0.0.16-beta7-develop
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.coda-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-insecure-rest-server",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: CODA_PRIVKEY_PASS
          value: "naughty blue worm"
        ports:
        - name: p2p-port
          protocol: TCP 
          containerPort: 8301
        - name: graphql-port
          protocol: TCP 
          containerPort: 3085
        - name: metrics-port
          protocol: TCP 
          containerPort: 10001
        - name: external-port
          protocol: TCP 
          containerPort: 10909
          hostPort: 10909        
        livenessProbe:
          tcpSocket:
            port: p2p-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config      
      nodeSelector:
        cloud.google.com/gke-preemptible: "true"
      volumes:
      - name: private-keys
        secret:
          secretName: yolo
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-2
  labels:
    app: test-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-2
  template:
    metadata:
      labels:
        app: test-2
        testnet: coda-testnet
        role: block-producer
        class: undefined
        version: 0.0.16
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "codaprotocol/coda-daemon:0.0.16-beta7-develop"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || coda accounts import -config-directory /root/.coda-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        env: 
          - name: CODA_PRIVKEY_PASS
            value: "naughty blue worm"
      containers:
      - name: user-agent
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        command: ["bash"]
        args: ["-c", "python3 agent.py"]
        env: 
          - name: CODA_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: yolo
                key: pub
          - name: CODA_PRIVKEY_PASS
            value: "naughty blue worm"
          - name: PYTHONUNBUFFERED
            value: "1"
        ports: 
        - name: metrics-port
          containerPort: 10000        
        livenessProbe:
          tcpSocket:
            port: metrics-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced && hasSentUserCommandsGreaterThan 1"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      
      - name: coda
        resources:
          limits:
          requests:
            memory: 8.0Gi
            cpu: 8.0
        image: codaprotocol/coda-daemon:0.0.16-beta7-develop
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.coda-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-insecure-rest-server",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: CODA_PRIVKEY_PASS
          value: "naughty blue worm"
        ports:
        - name: p2p-port
          protocol: TCP 
          containerPort: 8301
        - name: graphql-port
          protocol: TCP 
          containerPort: 3085
        - name: metrics-port
          protocol: TCP 
          containerPort: 10001
        - name: external-port
          protocol: TCP 
          containerPort: 10909
          hostPort: 10909        
        livenessProbe:
          tcpSocket:
            port: p2p-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config      
      nodeSelector:
        cloud.google.com/gke-preemptible: "true"
      volumes:
      - name: private-keys
        secret:
          secretName: yolo
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-3
  labels:
    app: test-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-3
  template:
    metadata:
      labels:
        app: test-3
        testnet: coda-testnet
        role: block-producer
        class: undefined
        version: 0.0.16
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: echo-service-key
          mountPath: "/echo-keys/"
          readOnly: true
        - name: faucet-service-key
          mountPath: "/faucet-keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "codaprotocol/coda-daemon:0.0.16-beta7-develop"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || coda accounts import -config-directory /root/.coda-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        env: 
          - name: CODA_PRIVKEY_PASS
            value: "naughty blue worm"
      containers:
      
      - name: bots
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        env:
          - name: CODA_GRAPHQL_HOST
            value: "0.0.0.0"
          - name: CODA_GRAPHQL_PORT
            value: "3085"
          - name: ECHO_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: echo-service-key
                key: pub
          - name: ECHO_PASSWORD
            value: "naughty blue worm"
          - name: FAUCET_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: faucet-service-key
                key: pub
          - name: FAUCET_PASSWORD
            value: "naughty blue worm"
          - name: DISCORD_API_KEY
            valueFrom:
              secretKeyRef:
                name: o1-discord-api-key
                key: o1discord
          - name: FAUCET_AMOUNT
            value: "10000000000"
          - name: FEE_AMOUNT
            value: "100000000"
        ports:
        - name: graphql-port
          containerPort: 3085        
        livenessProbe:
          tcpSocket:
            port: graphql-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced && peerCountGreaterThan 1 && ownsFunds"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      - name: coda
        resources:
          limits:
          requests:
            memory: 8.0Gi
            cpu: 8.0
        image: codaprotocol/coda-daemon:0.0.16-beta7-develop
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.coda-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-insecure-rest-server",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: CODA_PRIVKEY_PASS
          value: "naughty blue worm"
        ports:
        - name: p2p-port
          protocol: TCP 
          containerPort: 8301
        - name: graphql-port
          protocol: TCP 
          containerPort: 3085
        - name: metrics-port
          protocol: TCP 
          containerPort: 10001
        - name: external-port
          protocol: TCP 
          containerPort: 10909
          hostPort: 10909        
        livenessProbe:
          tcpSocket:
            port: p2p-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config      
      nodeSelector:
        cloud.google.com/gke-preemptible: "true"
      volumes:
      - name: private-keys
        secret:
          secretName: yolo
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      
      - name: echo-service-key
        secret:
          secretName: echo-service-key
          defaultMode: 256
          items:
          - key: key
            path: echo-key
          - key: pub
            path: echo-key.pub
      - name: faucet-service-key
        secret:
          secretName: faucet-service-key
          defaultMode: 256
          items:
          - key: key
            path: faucet-key
          - key: pub
            path: faucet-key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-4
  labels:
    app: test-4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-4
  template:
    metadata:
      labels:
        app: test-4
        testnet: coda-testnet
        role: block-producer
        class: undefined
        version: 0.0.16
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: echo-service-key
          mountPath: "/echo-keys/"
          readOnly: true
        - name: faucet-service-key
          mountPath: "/faucet-keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "codaprotocol/coda-daemon:0.0.16-beta7-develop"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || coda accounts import -config-directory /root/.coda-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        env: 
          - name: CODA_PRIVKEY_PASS
            value: "naughty blue worm"
      containers:
      - name: user-agent
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        command: ["bash"]
        args: ["-c", "python3 agent.py"]
        env: 
          - name: CODA_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: yolo
                key: pub
          - name: CODA_PRIVKEY_PASS
            value: "naughty blue worm"
          - name: PYTHONUNBUFFERED
            value: "1"
        ports: 
        - name: metrics-port
          containerPort: 10000        
        livenessProbe:
          tcpSocket:
            port: metrics-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced && hasSentUserCommandsGreaterThan 1"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      - name: bots
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        env:
          - name: CODA_GRAPHQL_HOST
            value: "0.0.0.0"
          - name: CODA_GRAPHQL_PORT
            value: "3085"
          - name: ECHO_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: echo-service-key
                key: pub
          - name: ECHO_PASSWORD
            value: "naughty blue worm"
          - name: FAUCET_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: faucet-service-key
                key: pub
          - name: FAUCET_PASSWORD
            value: "naughty blue worm"
          - name: DISCORD_API_KEY
            valueFrom:
              secretKeyRef:
                name: o1-discord-api-key
                key: o1discord
          - name: FAUCET_AMOUNT
            value: "10000000000"
          - name: FEE_AMOUNT
            value: "100000000"
        ports:
        - name: graphql-port
          containerPort: 3085        
        livenessProbe:
          tcpSocket:
            port: graphql-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced && peerCountGreaterThan 1 && ownsFunds"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      - name: coda
        resources:
          limits:
          requests:
            memory: 8.0Gi
            cpu: 8.0
        image: codaprotocol/coda-daemon:0.0.16-beta7-develop
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.coda-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-insecure-rest-server",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: CODA_PRIVKEY_PASS
          value: "naughty blue worm"
        ports:
        - name: p2p-port
          protocol: TCP 
          containerPort: 8301
        - name: graphql-port
          protocol: TCP 
          containerPort: 3085
        - name: metrics-port
          protocol: TCP 
          containerPort: 10001
        - name: external-port
          protocol: TCP 
          containerPort: 10909
          hostPort: 10909        
        livenessProbe:
          tcpSocket:
            port: p2p-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "source /healthcheck/utilities.sh && isDaemonSynced"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config      
      nodeSelector:
        cloud.google.com/gke-preemptible: "true"
      volumes:
      - name: private-keys
        secret:
          secretName: yolo
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      
      - name: echo-service-key
        secret:
          secretName: echo-service-key
          defaultMode: 256
          items:
          - key: key
            path: echo-key
          - key: pub
            path: echo-key.pub
      - name: faucet-service-key
        secret:
          secretName: faucet-service-key
          defaultMode: 256
          items:
          - key: key
            path: faucet-key
          - key: pub
            path: faucet-key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: config-dir
        emptyDir: {}

